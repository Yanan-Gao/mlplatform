
variables:
  SCALA_BUILD_IMAGE_2_13_0: "hseeberger/scala-sbt:8u212_1.2.8_2.13.0"
  KONGMING_JAR_NAME: "kongming.jar"
  KONGMING_JAR_NAME_PRODUCTION: "kongming_production.jar"
  KONGMING_SHA_NAME_PRODUCTION: "kongming_production_sha.txt"
  KONGMING_MERGEREQUESTS_JAR_FOLDER: "s3://thetradedesk-mlplatform-us-east-1/libs/kongming/jars/mergerequests"
  KONGMING_SNAPSHOTS_JAR_FOLDER: "s3://thetradedesk-mlplatform-us-east-1/libs/kongming/jars/snapshots"
  KONGMING_PROD_JAR_FOLDER: "s3://thetradedesk-mlplatform-us-east-1/libs/kongming/jars/prod"
  KONGMING_ASSEMBLY_OUT: "$CI_PROJECT_DIR/kongming/target/scala-2.12/kongming.jar"
  KONGMING_SCRIPTS_SOURCE: "src/main/bash/"
  KONGMING_MERGEREQUESTS_SCRIPTS_DEST: "s3://thetradedesk-mlplatform-us-east-1/libs/kongming/scripts/mergerequests"
  KONGMING_PROD_SCRIPTS_DEST: "s3://thetradedesk-mlplatform-us-east-1/libs/kongming/scripts/prod/"
  PYTHON_BUILD_IMAGE: "python:3.8"
  KONGMING_FEATURE_JSON_SOURCE: "kongming/resources/feature.json"
  KONGMING_FEATURE_JSON_DEST: "s3://thetradedesk-mlplatform-us-east-1/features/data/kongming/v=1/prod/features/feature.json"
kongming:test:
  image: "$SCALA_BUILD_IMAGE_2_13_0"
  stage: test
  cache:
    policy: pull
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
      changes:
        - "kongming/src/main/scala/**/*"
        - "kongming/build.sbt"
    - if: '$CI_COMMIT_BRANCH == "master"'
      changes:
        - "kongming/src/**/*"
        - "kongming/build.sbt"
  before_script:
    # we don't need to set up the machine for S3 in order to run tests
    - git checkout -B "$CI_COMMIT_REF_NAME" "$CI_COMMIT_SHA"
  script:
    - pushd ./kongming/
    - sbt test
    - popd
    - echo "ran KONGMING_test"


kongming:push_bits_merge_request:
  image: "$SCALA_BUILD_IMAGE_2_13_0"
  stage: assembly_upload
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
      changes:
        - "kongming/src/main/scala/**/*"
        - "kongming/build.sbt"
  script:
    - pushd ./kongming/
    - sbt "set test in assembly := {}" clean assembly
    - DEST=${KONGMING_MERGEREQUESTS_JAR_FOLDER}/${CI_COMMIT_REF_NAME}/${CI_PIPELINE_ID}-${CI_COMMIT_SHORT_SHA}
    - DEST_FIXED=${KONGMING_MERGEREQUESTS_JAR_FOLDER}/${CI_COMMIT_REF_NAME}/latest
    - aws s3 cp ${KONGMING_ASSEMBLY_OUT} ${DEST}/${KONGMING_JAR_NAME}
    - aws s3 cp ${KONGMING_ASSEMBLY_OUT} ${DEST_FIXED}/${KONGMING_JAR_NAME}
    - popd
    - echo "ran KONGMING_push_bits_merge_request"

  artifacts:
    paths:
      - ${KONGMING_ASSEMBLY_OUT}
    expire_in: 7 days

kongming:generate_pyspark_dev:
  stage: assembly_upload
  image: production.docker.adsrvr.org/ttd-base/mlops/ttd_pyspark:0.3.0
  needs: [ "kongming:push_bits_merge_request" ]
  dependencies: [ "kongming:push_bits_merge_request" ]
  allow_failure: true
  script:
    - pushd ./kongming/
    - python3 -m ttd_pyspark --jar ${KONGMING_ASSEMBLY_OUT} --name kongming_jar --version 0.2.0
    - pushd generated
    - poetry build
    - poetry publish -r dev_ttd_pypi-upload -u ${PYPI_DEV_USER} -p ${PYPI_DEV_PASS}
    - popd
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
      changes:
        - "kongming/src/main/scala/**/*"
        - "kongming/build.sbt"
  artifacts:
    paths:
      - kongming/generated

kongming:push_bits_master_snapshot:
  image: "$SCALA_BUILD_IMAGE_2_13_0"
  stage: assembly_upload
  rules:
    - if: '$CI_COMMIT_BRANCH == "master"'
      changes:
        - "kongming/src/main/scala/**/*"
        - "kongming/build.sbt"
  script:
    - pushd ./kongming/
    - sbt "set test in assembly := {}" clean assembly
    - DEST=${KONGMING_SNAPSHOTS_JAR_FOLDER}/${CI_COMMIT_REF_NAME}/${CI_PIPELINE_ID}-${CI_COMMIT_SHORT_SHA}
    - aws s3 cp ${KONGMING_ASSEMBLY_OUT} ${DEST}/${KONGMING_JAR_NAME}
    - popd
    - echo "ran KONGMING_push_bits_master_snapshot"

kongming:deploy_release:
  image: "$SCALA_BUILD_IMAGE_2_13_0"
  stage: deploy
  rules:
    - if: '$CI_COMMIT_BRANCH == "master"'
      changes:
        - "kongming/src/main/scala/**/*"
        - "kongming/build.sbt"
      allow_failure: false
  script:
    - pushd ./kongming/
    - sbt "set test in assembly := {}" clean assembly
    - aws s3 cp ${KONGMING_ASSEMBLY_OUT} ${KONGMING_PROD_JAR_FOLDER}/${KONGMING_JAR_NAME}
    - popd
    - echo "ran KONGMING_deploy_release"
  
kongming:deploy_production:
  image: "$SCALA_BUILD_IMAGE_2_13_0"
  stage: deploy
  rules:
    - if: '$CI_COMMIT_TAG =~ /^(kongming_production_\d{8,8}.*)$/'
      allow_failure: false
  script:
    - pushd ./kongming/
    - sbt "set test in assembly := {}" clean assembly
    - aws s3 cp ${KONGMING_ASSEMBLY_OUT} ${KONGMING_PROD_JAR_FOLDER}/${KONGMING_JAR_NAME_PRODUCTION}
    - echo "tag=$CI_COMMIT_TAG SHA=$CI_COMMIT_SHA">${KONGMING_SHA_NAME_PRODUCTION}
    - aws s3 cp ${KONGMING_SHA_NAME_PRODUCTION} ${KONGMING_PROD_JAR_FOLDER}/${KONGMING_SHA_NAME_PRODUCTION}
    - popd
    - echo "ran KONGMING_deploy_production"

kongming:push_mergerequests_scripts:
  image: "$PYTHON_BUILD_IMAGE"
  stage: deploy
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
      changes:
        - "kongming/src/main/bash/**/*"
        - "kongming/.gitlab-ci.yml"
  script:
    - pushd ./kongming/
    - DEST=${KONGMING_MERGEREQUESTS_SCRIPTS_DEST}/${CI_COMMIT_REF_NAME}/${CI_PIPELINE_ID}-${CI_COMMIT_SHORT_SHA}
    - DEST_FIXED=${KONGMING_MERGEREQUESTS_SCRIPTS_DEST}/${CI_COMMIT_REF_NAME}/latest
    - aws s3 cp ${KONGMING_SCRIPTS_SOURCE} ${DEST} --recursive
    - aws s3 cp ${KONGMING_SCRIPTS_SOURCE} ${DEST_FIXED} --recursive
    - popd
    - echo "ran push_mergerequests_scripts"

kongming:push_prod_scripts:
  image: "$PYTHON_BUILD_IMAGE"
  stage: deploy
  rules:
    - if: '$CI_COMMIT_BRANCH == "master"'
      changes:
        - "kongming/src/main/bash/**/*"
        - "kongming/.gitlab-ci.yml"
  script:
    - pushd ./kongming/
    - aws s3 cp ${KONGMING_SCRIPTS_SOURCE} ${KONGMING_PROD_SCRIPTS_DEST} --recursive
    - popd
    - echo "ran push_prod_scripts"

kongming:push_feature_json:
  image: "$PYTHON_BUILD_IMAGE"
  stage: deploy
  rules:
    - if: '$CI_COMMIT_BRANCH == "master"'
      changes:
        - "kongming/resources/feature.json"
  script:
    - pip3 install awscli
    - aws s3 cp ${KONGMING_FEATURE_JSON_SOURCE} ${KONGMING_FEATURE_JSON_DEST}
    - echo "pushed feature.json to s3"
