
variables:
  SCALA_BUILD_IMAGE_2_13_0: "hseeberger/scala-sbt:8u212_1.2.8_2.13.0"
  KONGMING_JAR_NAME: "kongming.jar"
  KONGMING_MERGEREQUESTS_JAR_FOLDER: "s3://thetradedesk-mlplatform-us-east-1/libs/kongming/jars/mergerequests"
  KONGMING_SNAPSHOTS_JAR_FOLDER: "s3://thetradedesk-mlplatform-us-east-1/libs/kongming/jars/snapshots"
  KONGMING_PROD_JAR_FOLDER: "s3://thetradedesk-mlplatform-us-east-1/libs/kongming/jars/prod"
  KONGMING_ASSEMBLY_OUT: "$CI_PROJECT_DIR/kongming/target/scala-2.12/kongming.jar"
  KONGMING_SCRIPTS_SOURCE: "src/main/bash/"
  KONGMING_MERGEREQUESTS_SCRIPTS_DEST: "s3://thetradedesk-mlplatform-us-east-1/libs/kongming/scripts/mergerequests"
  KONGMING_PROD_SCRIPTS_DEST: "s3://thetradedesk-mlplatform-us-east-1/libs/kongming/scripts/prod/"
  PYTHON_BUILD_IMAGE: "python:3.8"
  KONGMING_TRAINING_IMAGE: "kongming/training-gpu"

kongming:test:
  image: "$SCALA_BUILD_IMAGE_2_13_0"
  stage: test
  cache:
    policy: pull
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
      changes:
        - "kongming/src/main/scala/**/*"
        - "kongming/build.sbt"
    - if: '$CI_COMMIT_BRANCH == "master"'
      changes:
        - "kongming/src/**/*"
        - "kongming/build.sbt"
  before_script:
    # we don't need to set up the machine for S3 in order to run tests
    - git checkout -B "$CI_COMMIT_REF_NAME" "$CI_COMMIT_SHA"
  script:
    - pushd ./kongming/
    - sbt test
    - popd
    - echo "ran KONGMING_test"


kongming:push_bits_merge_request:
  image: "$SCALA_BUILD_IMAGE_2_13_0"
  stage: assembly_upload
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
      changes:
        - "kongming/src/main/scala/**/*"
        - "kongming/build.sbt"
  script:
    - pushd ./kongming/
    - sbt "set test in assembly := {}" clean assembly
    - DEST=${KONGMING_MERGEREQUESTS_JAR_FOLDER}/${CI_COMMIT_REF_NAME}/${CI_PIPELINE_ID}-${CI_COMMIT_SHORT_SHA}
    - DEST_FIXED=${KONGMING_MERGEREQUESTS_JAR_FOLDER}/${CI_COMMIT_REF_NAME}/latest
    - aws s3 cp ${KONGMING_ASSEMBLY_OUT} ${DEST}/${KONGMING_JAR_NAME}
    - aws s3 cp ${KONGMING_ASSEMBLY_OUT} ${DEST_FIXED}/${KONGMING_JAR_NAME}
    - popd
    - echo "ran KONGMING_push_bits_merge_request"

kongming:push_bits_master_snapshot:
  image: "$SCALA_BUILD_IMAGE_2_13_0"
  stage: assembly_upload
  rules:
    - if: '$CI_COMMIT_BRANCH == "master"'
      changes:
        - "kongming/src/main/scala/**/*"
        - "kongming/build.sbt"
  script:
    - pushd ./kongming/
    - sbt "set test in assembly := {}" clean assembly
    - DEST=${KONGMING_SNAPSHOTS_JAR_FOLDER}/${CI_COMMIT_REF_NAME}/${CI_PIPELINE_ID}-${CI_COMMIT_SHORT_SHA}
    - aws s3 cp ${KONGMING_ASSEMBLY_OUT} ${DEST}/${KONGMING_JAR_NAME}
    - popd
    - echo "ran KONGMING_push_bits_master_snapshot"

kongming:deploy_release:
  image: "$SCALA_BUILD_IMAGE_2_13_0"
  stage: deploy
  rules:
    - if: '$CI_COMMIT_BRANCH == "master"'
      changes:
        - "kongming/src/main/scala/**/*"
        - "kongming/build.sbt"
      allow_failure: false
  script:
    - pushd ./kongming/
    - sbt "set test in assembly := {}" clean assembly
    - aws s3 cp ${KONGMING_ASSEMBLY_OUT} ${KONGMING_PROD_JAR_FOLDER}/${KONGMING_JAR_NAME}
    - popd
    - echo "ran KONGMING_deploy_release"

kongming:push_mergerequests_scripts:
  image: "$PYTHON_BUILD_IMAGE"
  stage: deploy
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
      changes:
        - "kongming/src/main/bash/**/*"
        - "kongming/.gitlab-ci.yml"
  script:
    - pushd ./kongming/
    - DEST=${KONGMING_MERGEREQUESTS_SCRIPTS_DEST}/${CI_COMMIT_REF_NAME}/${CI_PIPELINE_ID}-${CI_COMMIT_SHORT_SHA}
    - DEST_FIXED=${KONGMING_MERGEREQUESTS_SCRIPTS_DEST}/${CI_COMMIT_REF_NAME}/latest
    - aws s3 cp ${KONGMING_SCRIPTS_SOURCE} ${DEST} --recursive
    - aws s3 cp ${KONGMING_SCRIPTS_SOURCE} ${DEST_FIXED} --recursive
    - popd
    - echo "ran push_mergerequests_scripts"

kongming:push_prod_scripts:
  image: "$PYTHON_BUILD_IMAGE"
  stage: deploy
  rules:
    - if: '$CI_COMMIT_BRANCH == "master"'
      changes:
        - "kongming/src/main/bash/**/*"
        - "kongming/.gitlab-ci.yml"
  script:
    - pushd ./kongming/
    - aws s3 cp ${KONGMING_SCRIPTS_SOURCE} ${KONGMING_PROD_SCRIPTS_DEST} --recursive
    - popd
    - echo "ran push_prod_scripts"

kongming:build_push_test_container:
  image: "$PYTHON_BUILD_IMAGE"
  stage: k8s_deploy
  services:
    - docker:dind
  before_script:
    - apt update
    - apt-get install docker.io -y
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
      changes:
        - "kongming/src/main/python/**/*"
        - "kongming/.gitlab-ci.yml"
  script:
    - export DOCKER_HOST=$DOCKER_PORT
    - pushd ./kongming/src/main/python/
    - docker login -u ${DOCKER_INTERNAL_USER} -p ${DOCKER_INTERNAL_PASS} ${DOCKER_INTERNAL_REGISTRY}
    - docker build -f Dockerfile.prod -t ${KONGMING_TRAINING_IMAGE}:${CI_COMMIT_SHORT_SHA} .
    - docker tag ${KONGMING_TRAINING_IMAGE}:${CI_COMMIT_SHORT_SHA} ${DOCKER_INTERNAL_REGISTRY}/${KONGMING_TRAINING_IMAGE}:${CI_COMMIT_SHORT_SHA}
    - docker push ${DOCKER_INTERNAL_REGISTRY}/${KONGMING_TRAINING_IMAGE}:${CI_COMMIT_SHORT_SHA}
    - popd
    - echo "test container for commit pushed"

kongming:build_push_release_container:
  image: "$PYTHON_BUILD_IMAGE"
  stage: k8s_deploy
  services:
    - docker:dind
  before_script:
    - apt update
    - apt-get install docker.io -y
  rules:
    - if: $CI_COMMIT_BRANCH == "master"
      changes:
        - "kongming/src/main/python/**/*"
        - "kongming/.gitlab-ci.yml"
  script:
    - export DOCKER_HOST=$DOCKER_PORT
    - pushd ./kongming/src/main/python/
    - docker login -u ${DOCKER_INTERNAL_USER} -p ${DOCKER_INTERNAL_PASS} ${DOCKER_INTERNAL_REGISTRY}
    - docker build -f Dockerfile.prod -t ${KONGMING_TRAINING_IMAGE}:release .
    - docker tag ${KONGMING_TRAINING_IMAGE}:release ${DOCKER_INTERNAL_REGISTRY}/${KONGMING_TRAINING_IMAGE}:release
    - docker push ${DOCKER_INTERNAL_REGISTRY}/${KONGMING_TRAINING_IMAGE}:release
    - popd
    - echo "release training container pushed"

