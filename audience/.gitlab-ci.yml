include:
  - component: $CI_SERVER_FQDN/thetradedesk/teams/infsrv/gitlab-cicd-cloudsmith/cloudsmith-auth@1

variables:
  AUDIENCE_SCALA_BUILD_IMAGE: "hseeberger/scala-sbt:8u212_1.2.8_2.13.0"
  ALTERNATE_SPARK_VERSION: "3.5.1"
  AUDIENCE_JAR_NAME: "audience.jar"
  AUDIENCE_MERGEREQUESTS_JAR_FOLDER: "s3://thetradedesk-mlplatform-us-east-1/libs/audience/jars/mergerequests"
  AUDIENCE_SNAPSHOTS_JAR_FOLDER: "s3://thetradedesk-mlplatform-us-east-1/libs/audience/jars/snapshots"
  AUDIENCE_PROD_JAR_FOLDER: "s3://thetradedesk-mlplatform-us-east-1/libs/audience/jars/prod"
  AUDIENCE_ASSEMBLY_OUT: "$CI_PROJECT_DIR/audience/target/scala-2.12/audience.jar"
  AUDIENCE_SCRIPTS_SOURCE: "src/main/bash/"
  AUDIENCE_SCRIPTS_DEST: "s3://thetradedesk-mlplatform-us-east-1/libs/audience/scripts/"
  PYTHON_BUILD_IMAGE: "python:3.8"
  AUDIENCE_TRAINING_IMAGE: "audience/training-gpu"

audience:test:
  image: "$AUDIENCE_SCALA_BUILD_IMAGE"
  stage: test
  cache:
    policy: pull
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
      changes:
        - "audience/src/main/scala/**/*"
        - "audience/build.sbt"
    - if: '$CI_COMMIT_BRANCH == "master"'
      changes:
        - "audience/src/**/*"
        - "audience/build.sbt"
  before_script:
    # fix debian stretch issues before running cloudsmith-auth
    - |
      echo "Fixing Debian Stretch repositories..."
      apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 648ACFD622F3D138  0E98404D386FA1D9
      echo 'deb http://archive.debian.org/debian stretch main' > /etc/apt/sources.list
    - !reference [.cloudsmith-auth, script]
    # we don't need to set up the machine for S3 in order to run tests
    - git checkout -B "$CI_COMMIT_REF_NAME" "$CI_COMMIT_SHA"
  script:
    - pushd ./audience/
    - sbt test
    - popd
    - echo "ran AUDIENCE_test"

audience:lint:
  image: python:3.8
  stage: test
  rules:
    - changes:
        - "audience/src/main/python/**/*"
        - "audience/build.sbt"
  before_script:
    - pip3 install flake8
  script:
    - pushd ./audience/src/main/python/
    - flake8 --ignore=C901
    - popd
    - echo "ran lint for audience"

audience:push_bits_merge_request:
  image: "$AUDIENCE_SCALA_BUILD_IMAGE"
  stage: assembly_upload
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
      changes:
        - "audience/src/main/scala/**/*"
        - "audience/build.sbt"
  before_script:
    # fix debian stretch issues before running cloudsmith-auth
    - |
      echo "Fixing Debian Stretch repositories..."
      apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 648ACFD622F3D138  0E98404D386FA1D9
      echo 'deb http://archive.debian.org/debian stretch main' > /etc/apt/sources.list
    - !reference [.cloudsmith-auth, script]
    - apt-get update
    - apt-get install -y python3-pip
    - pip3 install awscli
  script:
    - pushd ./audience/
    - sbt "set test in assembly := {}" clean assembly
    - DEST=${AUDIENCE_MERGEREQUESTS_JAR_FOLDER}/${CI_COMMIT_REF_NAME}/${CI_PIPELINE_ID}-${CI_COMMIT_SHORT_SHA}
    - DEST_FIXED=${AUDIENCE_MERGEREQUESTS_JAR_FOLDER}/${CI_COMMIT_REF_NAME}/latest
    - aws s3 cp ${AUDIENCE_ASSEMBLY_OUT} ${DEST}/${AUDIENCE_JAR_NAME}
    - aws s3 cp ${AUDIENCE_ASSEMBLY_OUT} ${DEST_FIXED}/${AUDIENCE_JAR_NAME}
    - # Update _CURRENT file
      - CURRENT_PATH=${AUDIENCE_MERGEREQUESTS_JAR_FOLDER}/${CI_COMMIT_REF_NAME}/_CURRENT
      - aws s3 cp ${CURRENT_PATH} _CURRENT || touch _CURRENT
      - (echo "${CI_PIPELINE_ID}-${CI_COMMIT_SHORT_SHA}"; cat _CURRENT) > _CURRENT.new
      - mv _CURRENT.new _CURRENT
      - aws s3 cp _CURRENT ${CURRENT_PATH}
    - popd
    - echo "ran AUDIENCE_push_bits_merge_request"


audience:push_bits_merge_request_spark3.5:
  image: "$AUDIENCE_SCALA_BUILD_IMAGE"
  stage: assembly_upload
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
      changes:
        - "audience/src/main/scala/**/*"
        - "audience/build.sbt"
  before_script:
    # fix debian stretch issues before running cloudsmith-auth
    - |
      echo "Fixing Debian Stretch repositories..."
      apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 648ACFD622F3D138  0E98404D386FA1D9
      echo 'deb http://archive.debian.org/debian stretch main' > /etc/apt/sources.list
    - !reference [.cloudsmith-auth, script]
    - apt-get update
    - apt-get install -y python3-pip
    - pip3 install awscli
  script:
    - pushd ./audience/
    - sbt -DsparkVersion="${ALTERNATE_SPARK_VERSION}" "set test in assembly := {}" clean assembly
    - DEST=${AUDIENCE_MERGEREQUESTS_JAR_FOLDER}/spark-${ALTERNATE_SPARK_VERSION}/${CI_COMMIT_REF_NAME}/${CI_PIPELINE_ID}-${CI_COMMIT_SHORT_SHA}
    - DEST_FIXED=${AUDIENCE_MERGEREQUESTS_JAR_FOLDER}/spark-${ALTERNATE_SPARK_VERSION}/${CI_COMMIT_REF_NAME}/latest
    - aws s3 cp ${AUDIENCE_ASSEMBLY_OUT} ${DEST}/${AUDIENCE_JAR_NAME}
    - aws s3 cp ${AUDIENCE_ASSEMBLY_OUT} ${DEST_FIXED}/${AUDIENCE_JAR_NAME}
    # Update _CURRENT file
    - CURRENT_PATH=${AUDIENCE_MERGEREQUESTS_JAR_FOLDER}/spark-${ALTERNATE_SPARK_VERSION}/${CI_COMMIT_REF_NAME}/_CURRENT
    - aws s3 cp ${CURRENT_PATH} _CURRENT || touch _CURRENT
    - (echo "${CI_PIPELINE_ID}-${CI_COMMIT_SHORT_SHA}"; cat _CURRENT) > _CURRENT.new
    - mv _CURRENT.new _CURRENT
    - aws s3 cp _CURRENT ${CURRENT_PATH}
    - popd
    - echo "ran AUDIENCE_push_bits_merge_request"

audience:push_bits_master_snapshot:
  image: "$AUDIENCE_SCALA_BUILD_IMAGE"
  stage: assembly_upload
  rules:
    - if: '$CI_COMMIT_BRANCH == "master"'
      changes:
        - "audience/src/main/scala/**/*"
        - "audience/build.sbt"
  before_script:
    # fix debian stretch issues before running cloudsmith-auth
    - |
      echo "Fixing Debian Stretch repositories..."
      apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 648ACFD622F3D138  0E98404D386FA1D9
      echo 'deb http://archive.debian.org/debian stretch main' > /etc/apt/sources.list
    - !reference [.cloudsmith-auth, script]
    - apt-get update
    - apt-get install -y python3-pip
    - pip3 install awscli
  script:
    - pushd ./audience/
    - sbt "set test in assembly := {}" clean assembly
    - DEST=${AUDIENCE_SNAPSHOTS_JAR_FOLDER}/${CI_COMMIT_REF_NAME}/${CI_PIPELINE_ID}-${CI_COMMIT_SHORT_SHA}
    - aws s3 cp ${AUDIENCE_ASSEMBLY_OUT} ${DEST}/${AUDIENCE_JAR_NAME}
    # do an additional build for a different spark version
    - sbt -DsparkVersion="${ALTERNATE_SPARK_VERSION}" "set test in assembly := {}" clean assembly
    - DEST=${AUDIENCE_SNAPSHOTS_JAR_FOLDER}/spark-${ALTERNATE_SPARK_VERSION}/${CI_COMMIT_REF_NAME}/${CI_PIPELINE_ID}-${CI_COMMIT_SHORT_SHA}
    - aws s3 cp ${AUDIENCE_ASSEMBLY_OUT} ${DEST}/${AUDIENCE_JAR_NAME}
    # Update _CURRENT file
    - CURRENT_PATH=${AUDIENCE_PROD_JAR_FOLDER}/_CURRENT
    - aws s3 cp ${CURRENT_PATH} _CURRENT || touch _CURRENT
    - (echo "${CI_PIPELINE_ID}-${CI_COMMIT_SHORT_SHA}"; cat _CURRENT) > _CURRENT.new
    - mv _CURRENT.new _CURRENT
    - aws s3 cp _CURRENT ${CURRENT_PATH}
    - popd
    - echo "ran AUDIENCE_push_bits_master_snapshot"

audience:deploy_release:
  image: "$AUDIENCE_SCALA_BUILD_IMAGE"
  stage: deploy
  rules:
    - if: '$CI_COMMIT_BRANCH == "master"'
      changes:
        - "audience/src/main/scala/**/*"
        - "audience/build.sbt"
      allow_failure: false
  before_script:
    # fix debian stretch issues before running cloudsmith-auth
    - |
      echo "Fixing Debian Stretch repositories..."
      apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 648ACFD622F3D138  0E98404D386FA1D9
      echo 'deb http://archive.debian.org/debian stretch main' > /etc/apt/sources.list
    - !reference [.cloudsmith-auth, script]
    - apt-get update
    - apt-get install -y python3-pip
    - pip3 install awscli
  script:
    - pushd ./audience/
    - sbt "set test in assembly := {}" clean assembly
    - aws s3 cp ${AUDIENCE_ASSEMBLY_OUT} ${AUDIENCE_PROD_JAR_FOLDER}/${AUDIENCE_JAR_NAME}
    # do an additional build for a different spark version
    - sbt -DsparkVersion="${ALTERNATE_SPARK_VERSION}" "set test in assembly := {}" clean assembly
    - aws s3 cp ${AUDIENCE_ASSEMBLY_OUT} ${AUDIENCE_PROD_JAR_FOLDER}/spark-${ALTERNATE_SPARK_VERSION}/${AUDIENCE_JAR_NAME}
    - popd
    - echo "ran AUDIENCE_deploy_release"


audience:push_scripts:
  image: "$PYTHON_BUILD_IMAGE"
  stage: deploy
  rules:
    - if: '$CI_COMMIT_BRANCH == "master"'
      changes:
        - "audience/src/main/bash/**/*"
        - "audience/.gitlab-ci.yml"
  before_script:
    - pip3 install awscli
  script:
    - pushd ./audience/
    - aws s3 cp ${AUDIENCE_SCRIPTS_SOURCE} ${AUDIENCE_SCRIPTS_DEST} --recursive
    - popd
    - echo "ran push_set_scripts"
