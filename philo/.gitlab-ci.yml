
variables:
  SCALA_BUILD_IMAGE_2_13_0: "hseeberger/scala-sbt:8u212_1.2.8_2.13.0"
  PHILO_JAR_NAME: "philo.jar"
  PHILO_MERGEREQUESTS_JAR_FOLDER: "s3://thetradedesk-mlplatform-us-east-1/libs/philo/jars/mergerequests"
  PHILO_SNAPSHOTS_JAR_FOLDER: "s3://thetradedesk-mlplatform-us-east-1/libs/philo/jars/snapshots"
  PHILO_PROD_JAR_FOLDER: "s3://thetradedesk-mlplatform-us-east-1/libs/philo/jars/prod"
  PHILO_ASSEMBLY_OUT: "/builds/thetradedesk/mlplatform/philo/target/scala-2.12/philo.jar"

philo:test:
  image: "$SCALA_BUILD_IMAGE_2_13_0"
  stage: test
  cache:
    policy: pull
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
      changes:
        - "philo/src/**/*"
    - if: '$CI_COMMIT_BRANCH == "master"'
      changes:
        - "philo/src/**/*"
  before_script:
    # we don't need to set up the machine for S3 in order to run tests
    - git checkout -B "$CI_COMMIT_REF_NAME" "$CI_COMMIT_SHA"
  script:
    - pushd ./philo/
    - sbt test
    - popd
    - echo "ran PHILO_test"


philo:push_bits_merge_request:
  image: "$SCALA_BUILD_IMAGE_2_13_0"
  stage: assembly_upload
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
      changes:
        - "philo/src/**/*"
  script:
    - pushd ./philo/
    - sbt "set test in assembly := {}" clean assembly
    - DEST=${PHILO_MERGEREQUESTS_JAR_FOLDER}/${CI_COMMIT_REF_NAME}/${CI_PIPELINE_ID}-${CI_COMMIT_SHORT_SHA}
    - aws s3 cp ${PHILO_ASSEMBLY_OUT} ${DEST}/${PHILO_JAR_NAME}
    - popd
    - echo "ran PHILO_push_bits_merge_request"

philo:push_bits_master_snapshot:
  image: "$SCALA_BUILD_IMAGE_2_13_0"
  stage: assembly_upload
  rules:
    - if: '$CI_COMMIT_BRANCH == "master"'
      changes:
        - "philo/src/**/*"
  script:
    - pushd ./philo/
    - sbt "set test in assembly := {}" clean assembly
    - DEST=${PHILO_SNAPSHOTS_JAR_FOLDER}/${CI_COMMIT_REF_NAME}/${CI_PIPELINE_ID}-${CI_COMMIT_SHORT_SHA}
    - aws s3 cp ${PHILO_ASSEMBLY_OUT} ${DEST}/${PHILO_JAR_NAME}
    - popd
    - echo "ran PHILO_push_bits_master_snapshot"

philo:deploy_release:
  image: "$SCALA_BUILD_IMAGE_2_13_0"
  stage: deploy
  rules:
    - if: '$CI_COMMIT_BRANCH == "master"'
      changes:
        - "philo/src/**/*"
      when: manual
      allow_failure: false
  script:
    - pushd ./philo/
    - sbt "set test in assembly := {}" clean assembly
    - aws s3 cp ${PHILO_ASSEMBLY_OUT} ${PHILO_PROD_JAR_FOLDER}/${PHILO_JAR_NAME}
    - popd
    - echo "ran PHILO_deploy_release"

