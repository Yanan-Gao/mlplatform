variables:
  CONTEXTUAL_FEATURES_JAR_NAME: "contextual-features.jar"
  CONTEXTUAL_FEATURES_MERGEREQUESTS_JAR_FOLDER: "s3://thetradedesk-mlplatform-us-east-1/libs/contextual-features-scala/jars/mergerequests"
  CONTEXTUAL_FEATURES_SNAPSHOTS_JAR_FOLDER: "s3://thetradedesk-mlplatform-us-east-1/libs/contextual-features-scala/jars/snapshots"
  CONTEXTUAL_FEATURES_PROD_JAR_FOLDER: "s3://thetradedesk-mlplatform-us-east-1/libs/contextual-features-scala/jars/prod"
  CONTEXTUAL_FEATURES_ASSEMBLY_OUT: "$CI_PROJECT_DIR/contextual-features-scala/contextual/target/scala-2.12/contextual-features.jar"
  CONTEXTUAL_FEATURES_SCALA_DOCKER_IMAGE: "${DOCKER_DEV_REGISTRY}/contextual-features-scala"

  FEATURES_INTERFACES_JAR_NAME: "feature-interfaces.jar"
  FEATURES_INTERFACES_MERGEREQUESTS_JAR_FOLDER: "s3://thetradedesk-mlplatform-us-east-1/libs/feature-interfaces-scala/jars/mergerequests"
  FEATURES_INTERFACES_SNAPSHOTS_JAR_FOLDER: "s3://thetradedesk-mlplatform-us-east-1/libs/feature-interfaces-scala/jars/snapshots"
  FEATURES_INTERFACES_PROD_JAR_FOLDER: "s3://thetradedesk-mlplatform-us-east-1/libs/feature-interfaces-scala/jars/prod"
  FEATURES_INTERFACES_ASSEMBLY_OUT: "$CI_PROJECT_DIR/contextual-features-scala/interfaces/target/scala-2.12/feature-interfaces.jar"
  FEATURES_INTERFACES_SCALA_DOCKER_IMAGE: "${DOCKER_DEV_REGISTRY}/feature-interfaces-scala"

  SCALA_BUILD_IMAGE_2_12_12: "hseeberger/scala-sbt:11.0.12_1.5.5_2.12.15"

  SBT_OPTS: "-Xmx4G -XX:+UseConcMarkSweepGC -XX:+CMSClassUnloadingEnabled -XX:MaxPermSize=4G -Xss4M"


#build and push the test docker image
contextual-features-scala:deploy_dev_docker_image_merge_request_contextual:
  image: proxy.docker.adsrvr.org/docker:git
  stage: .pre
  services:
    - docker:dind
  after_script:
    - docker logout ${DOCKER_PRODUCTION_REGISTRY}
    - docker logout ${DOCKER_DEV_REGISTRY}
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
      changes:
        - "contextual-features-scala/contextual/Dockerfile"
  before_script:
    - git checkout -B "$CI_COMMIT_REF_NAME" "$CI_COMMIT_SHA"
  script:
    - cd ./contextual-features-scala/
    - echo "logging in to ${DOCKER_DEV_REGISTRY}"
    - docker login ${DOCKER_DEV_REGISTRY} -u ${DOCKER_DEV_USER} -p ${DOCKER_DEV_PASS}
    - echo "building ${DOCKER_DEV_REGISTRY}/contextual-features-scala:${CI_COMMIT_SHORT_SHA}"
    - docker build -f ./contextual/Dockerfile -t ${DOCKER_DEV_REGISTRY}/contextual-features-scala:${CI_COMMIT_SHORT_SHA} -t ${DOCKER_DEV_REGISTRY}/contextual-features-scala:latest .
    - echo "pushing ${DOCKER_DEV_REGISTRY}/contextual-features-scala:latest"
    - docker push ${DOCKER_DEV_REGISTRY}/contextual-features-scala:latest
    - echo "ran deploy_dev_docker_image_merge_request_contextual"

contextual-features-scala:test_interfaces:
  image: "$CONTEXTUAL_FEATURES_SCALA_DOCKER_IMAGE"
  stage: test
  cache:
    policy: pull
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
      changes:
        - "contextual-features-scala/interfaces/src/**/*"
    - if: '$CI_COMMIT_BRANCH == "master"'
      changes:
        - "contextual-features-scala/interfaces/src/**/*"
  before_script:
    - git checkout -B "$CI_COMMIT_REF_NAME" "$CI_COMMIT_SHA"
  script:
    - pushd ./contextual-features-scala/
    - sbt interfaces/test
    - popd
    - echo "ran contextual_features_scala:test_interfaces"

contextual-features-scala:test_contextual:
  image: "$CONTEXTUAL_FEATURES_SCALA_DOCKER_IMAGE"
  stage: test
  cache:
    policy: pull
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
      changes:
        - "contextual-features-scala/contextual/src/**/*"
    - if: '$CI_COMMIT_BRANCH == "master"'
      changes:
        - "contextual-features-scala/contextual/src/**/*"
  before_script:
    - git checkout -B "$CI_COMMIT_REF_NAME" "$CI_COMMIT_SHA"
  script:
    - pushd ./contextual-features-scala/
    - sbt contextual/test
    - popd
    - echo "ran contextual_features_scala:test_contextual"

contextual-features-scala:push_bits_merge_request:
  image: "$SCALA_BUILD_IMAGE_2_12_12"
  stage: deploy
  dependencies:
    - contextual-features-scala:test_interfaces
    - contextual-features-scala:test_contextual
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
      changes:
        - "contextual-features-scala/**/*"
  script:
    - pushd ./contextual-features-scala/
    - SBT_OPTS=${SBT_OPTS} sbt "set test in assembly := {}" clean assembly
    - DEST=${CONTEXTUAL_FEATURES_MERGEREQUESTS_JAR_FOLDER}/${CI_COMMIT_REF_NAME}/${CI_PIPELINE_ID}-${CI_COMMIT_SHORT_SHA}
    - DEST_FIXED=${CONTEXTUAL_FEATURES_MERGEREQUESTS_JAR_FOLDER}/${CI_COMMIT_REF_NAME}/latest
    - echo "copying contextual jar"
    - aws s3 cp ${CONTEXTUAL_FEATURES_ASSEMBLY_OUT} ${DEST}/${CONTEXTUAL_FEATURES_JAR_NAME}
    - aws s3 cp ${CONTEXTUAL_FEATURES_ASSEMBLY_OUT} ${DEST_FIXED}/${CONTEXTUAL_FEATURES_JAR_NAME}
    - echo "copying interface jar"
    - DEST_I=${FEATURES_INTERFACES_MERGEREQUESTS_JAR_FOLDER}/${CI_COMMIT_REF_NAME}/${CI_PIPELINE_ID}-${CI_COMMIT_SHORT_SHA}
    - DEST_FIXED_I=${FEATURES_INTERFACES_MERGEREQUESTS_JAR_FOLDER}/${CI_COMMIT_REF_NAME}/latest
    - aws s3 cp ${FEATURES_INTERFACES_ASSEMBLY_OUT} ${DEST_I}/${FEATURES_INTERFACES_JAR_NAME}
    - aws s3 cp ${FEATURES_INTERFACES_ASSEMBLY_OUT} ${DEST_FIXED_I}/${FEATURES_INTERFACES_JAR_NAME}
    - popd
    - echo "ran contextual_features_scala:push_bits_merge_request"

contextual-features-scala:push_bits_master_snapshot:
  image: "$SCALA_BUILD_IMAGE_2_12_12"
  stage: deploy
  dependencies:
    - contextual-features-scala:test_interfaces
    - contextual-features-scala:test_contextual
  rules:
    - if: '$CI_COMMIT_BRANCH == "master"'
      changes:
        - "contextual-features-scala/src/**/*"
  script:
    - pushd ./contextual-features-scala/
    - sbt "set test in assembly := {}" clean assembly
    - DEST=${CONTEXTUAL_FEATURES_SNAPSHOTS_JAR_FOLDER}/${CI_COMMIT_REF_NAME}/${CI_PIPELINE_ID}-${CI_COMMIT_SHORT_SHA}
    - aws s3 cp ${CONTEXTUAL_FEATURES_ASSEMBLY_OUT} ${DEST}/${CONTEXTUAL_FEATURES_JAR_NAME}
    - DEST_I=${FEATURES_INTERFACES_SNAPSHOTS_JAR_FOLDER}/${CI_COMMIT_REF_NAME}/${CI_PIPELINE_ID}-${CI_COMMIT_SHORT_SHA}
    - aws s3 cp ${FEATURES_INTERFACES_ASSEMBLY_OUT} ${DEST_I}/${FEATURES_INTERFACES_JAR_NAME}
    - popd
    - echo "ran contextual_features_scala:push_bits_master_snapshot"

contextual-features-scala:deploy_release:
  image: "$SCALA_BUILD_IMAGE_2_12_12"
  stage: deploy
  rules:
    - if: '$CI_COMMIT_BRANCH == "master"'
      changes:
        - "contextual-features-scala/src/**/*"
      when: manual
      allow_failure: false
  script:
    - pushd ./contextual-features-scala/
    - sbt "set test in assembly := {}" clean assembly
    - aws s3 cp ${CONTEXTUAL_FEATURES_ASSEMBLY_OUT} ${CONTEXTUAL_FEATURES_PROD_JAR_FOLDER}/${CONTEXTUAL_FEATURES_JAR_NAME}
    - aws s3 cp ${FEATURES_INTERFACES_ASSEMBLY_OUT} ${FEATURES_INTERFACES_PROD_JAR_FOLDER}/${FEATURES_INTERFACES_JAR_NAME}
    - popd
    - echo "ran contextual_features_scala:deploy_release"
