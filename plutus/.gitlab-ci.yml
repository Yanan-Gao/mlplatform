variables:
  PLUTUS_JAR_NAME: "plutus.jar"
  PLUTUS_MERGEREQUESTS_JAR_FOLDER: "s3://thetradedesk-mlplatform-us-east-1/libs/plutus/jars/mergerequests"
  PLUTUS_SNAPSHOTS_JAR_FOLDER: "s3://thetradedesk-mlplatform-us-east-1/libs/plutus/jars/snapshots"
  PLUTUS_PROD_JAR_FOLDER: "s3://thetradedesk-mlplatform-us-east-1/libs/plutus/jars/prod"
  ASSEMBLY_OUT: "/builds/thetradedesk/mlplatform/plutus/target/scala-2.12/plutus.jar"

plutus:test:
  image: "$SCALA_BUILD_IMAGE"
  stage: test
  cache:
    policy: pull
  before_script:
    # we don't need to set up the machine for S3 in order to run tests
    - git checkout -B "$CI_COMMIT_REF_NAME" "$CI_COMMIT_SHA"
  script: 
    - pushd ./plutus/
    - sbt test
    - popd
    - echo "ran plutus_test"

plutus:push_bits_merge_request:
  image: "$SCALA_BUILD_IMAGE"
  stage: assembly_upload
  except:
    - master
  script:
    - pushd ./plutus/
    - sbt "set test in assembly := {}" clean assembly
    - DEST=${PLUTUS_MERGEREQUESTS_JAR_FOLDER}/${CI_COMMIT_REF_NAME}/${CI_PIPELINE_ID}-${CI_COMMIT_SHORT_SHA}
    - aws s3 cp ${ASSEMBLY_OUT} ${DEST}/${PLUTUS_JAR_NAME}
    - popd
    - echo "ran plutus_push_bits_merge_request"

plutus:push_bits_master_snapshot:
  image: "$SCALA_BUILD_IMAGE"
  stage: assembly_upload
  only:
    - master
  script:
    - pushd ./plutus/
    - sbt "set test in assembly := {}" clean assembly
    - DEST=${PLUTUS_SNAPSHOTS_JAR_FOLDER}/${CI_COMMIT_REF_NAME}/${CI_PIPELINE_ID}-${CI_COMMIT_SHORT_SHA}
    - aws s3 cp ${ASSEMBLY_OUT} ${DEST}/${PLUTUS_JAR_NAME}
    - popd
    - echo "ran plutus_push_bits_master_snapshot"

plutus:deploy_release:
  image: "$SCALA_BUILD_IMAGE"
  stage: deploy
  when: manual
  allow_failure: false
  script:
    - pushd ./plutus/
    - sbt "set test in assembly := {}" clean assembly
    - aws s3 cp ${ASSEMBLY_OUT} ${PLUTUS_PROD_JAR_FOLDER}/${PLUTUS_JAR_NAME}
    - popd
    - echo "ran plutus_deploy_release"
